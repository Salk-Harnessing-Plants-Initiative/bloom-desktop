name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

jobs:
  # Lint and format check for Node.js/TypeScript
  lint-node:
    name: Lint - Node.js
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Check Prettier formatting
        run: npm run format:check

  # Lint and format check for Python
  lint-python:
    name: Lint - Python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v7

      - name: Install Python dependencies
        run: uv sync --all-extras

      - name: Check black formatting
        run: uv run black --check python/

      - name: Run ruff linter
        run: uv run ruff check python/

      - name: Run mypy type checker
        run: uv run mypy python/

  # TypeScript compilation check
  compile-typescript:
    name: Compile - TypeScript
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc --noEmit

  # Python tests with coverage
  test-python:
    name: Test - Python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install Python dependencies
        run: uv sync --all-extras

      - name: Run Python tests with coverage
        run: npm run test:python
        # Note: pytest.ini or pyproject.toml enforces 80% coverage minimum

  # Integration tests
  test-integration:
    name: Test - Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install dependencies
        run: npm ci

      - name: Build Python executable
        run: npm run build:python

      - name: Run IPC integration tests
        run: npm run test:ipc

  # Summary job - requires all checks to pass
  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs:
      - lint-node
      - lint-python
      - compile-typescript
      - test-python
      - test-integration

    steps:
      - name: All checks passed
        run: echo "âœ… All PR checks passed successfully!"
